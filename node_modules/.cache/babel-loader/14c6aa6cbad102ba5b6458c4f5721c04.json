{"ast":null,"code":"import Github from '../Github';\nimport Auth from '../Auth';\nconst routes = [{\n  name: 'github.repos',\n  path: '/',\n  component: Github,\n  exact: true\n}, {\n  name: 'signin',\n  path: 'signin',\n  component: Auth,\n  exact: true\n}];\n\nfunction routePath(name, args = null) {\n  let route = routes.find(route => route.name === name);\n  if (route === undefined) return '';\n  if (args === null) return route.path;\n  return Object.keys(args).reduce((path, arg) => path.replace(':' + arg, args[arg]), route.path);\n}\n\nexport default routes;\nexport { routePath };","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/learning/starter/react-redux-saga-starter/src/App/routes.js"],"names":["Github","Auth","routes","name","path","component","exact","routePath","args","route","find","undefined","Object","keys","reduce","arg","replace"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,SAAS,EAAEL,MAHb;AAIEM,EAAAA,KAAK,EAAE;AAJT,CADa,EAOb;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAEJ,IAHb;AAIEK,EAAAA,KAAK,EAAE;AAJT,CAPa,CAAf;;AAeA,SAASC,SAAT,CAAmBJ,IAAnB,EAAyBK,IAAI,GAAG,IAAhC,EAAsC;AACpC,MAAIC,KAAK,GAAGP,MAAM,CAACQ,IAAP,CAAYD,KAAK,IAAIA,KAAK,CAACN,IAAN,KAAeA,IAApC,CAAZ;AAEA,MAAIM,KAAK,KAAKE,SAAd,EAAyB,OAAO,EAAP;AACzB,MAAIH,IAAI,KAAK,IAAb,EAAmB,OAAOC,KAAK,CAACL,IAAb;AAEnB,SAAOQ,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,CACL,CAACV,IAAD,EAAOW,GAAP,KAAeX,IAAI,CAACY,OAAL,CAAa,MAAMD,GAAnB,EAAwBP,IAAI,CAACO,GAAD,CAA5B,CADV,EAELN,KAAK,CAACL,IAFD,CAAP;AAID;;AAED,eAAeF,MAAf;AAEA,SAASK,SAAT","sourcesContent":["import Github from '../Github';\nimport Auth from '../Auth'\n\nconst routes = [\n  {\n    name: 'github.repos',\n    path: '/',\n    component: Github,\n    exact: true\n  },\n  {\n    name: 'signin',\n    path: 'signin',\n    component: Auth,\n    exact: true\n  }\n];\n\nfunction routePath(name, args = null) {\n  let route = routes.find(route => route.name === name);\n\n  if (route === undefined) return '';\n  if (args === null) return route.path;\n\n  return Object.keys(args).reduce(\n    (path, arg) => path.replace(':' + arg, args[arg]),\n    route.path\n  );\n}\n\nexport default routes;\n\nexport { routePath };\n"]},"metadata":{},"sourceType":"module"}