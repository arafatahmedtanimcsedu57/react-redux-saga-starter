{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { types } from './actions';\nconst initialState = {\n  repos: [],\n  loading: false\n};\nconst reducers = handleActions({\n  [types.REPOS_FETCH]: (state, action) => ({ ...state,\n    repos: [],\n    loading: true\n  }),\n  [types.REPOS_RECEIVED]: (state, action) => ({ ...state,\n    repos: action.payload.repos,\n    loading: false\n  }),\n  [types.REPOS_FETCH_FAIL]: (state, action) => ({ ...state,\n    repos: [],\n    loading: false\n  })\n}, initialState);\nexport default reducers;","map":{"version":3,"sources":["/home/zoha/Documents/IM/react-redux-saga-starter/src/Github/reducers.js"],"names":["handleActions","types","initialState","repos","loading","reducers","REPOS_FETCH","state","action","REPOS_RECEIVED","payload","REPOS_FETCH_FAIL"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SAASC,KAAT,QAAsB,WAAtB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,OAAO,EAAE;AAAtB,CAArB;AAEA,MAAMC,QAAQ,GAAGL,aAAa,CAC1B;AACI,GAACC,KAAK,CAACK,WAAP,GAAqB,CAACC,KAAD,EAAQC,MAAR,MAAoB,EACrC,GAAGD,KADkC;AAErCJ,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,OAAO,EAAE;AAH4B,GAApB,CADzB;AAOI,GAACH,KAAK,CAACQ,cAAP,GAAwB,CAACF,KAAD,EAAQC,MAAR,MAAoB,EACxC,GAAGD,KADqC;AAExCJ,IAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAFkB;AAGxCC,IAAAA,OAAO,EAAE;AAH+B,GAApB,CAP5B;AAaI,GAACH,KAAK,CAACU,gBAAP,GAA0B,CAACJ,KAAD,EAAQC,MAAR,MAAoB,EAC1C,GAAGD,KADuC;AAE1CJ,IAAAA,KAAK,EAAE,EAFmC;AAG1CC,IAAAA,OAAO,EAAE;AAHiC,GAApB;AAb9B,CAD0B,EAoB1BF,YApB0B,CAA9B;AAuBA,eAAeG,QAAf","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport { types } from './actions';\n\nconst initialState = { repos: [], loading: false };\n\nconst reducers = handleActions(\n    {\n        [types.REPOS_FETCH]: (state, action) => ({\n            ...state,\n            repos: [],\n            loading: true\n        }),\n\n        [types.REPOS_RECEIVED]: (state, action) => ({\n            ...state,\n            repos: action.payload.repos,\n            loading: false\n        }),\n\n        [types.REPOS_FETCH_FAIL]: (state, action) => ({\n            ...state,\n            repos: [],\n            loading: false\n        })\n    },\n    initialState\n);\n\nexport default reducers;\n"]},"metadata":{},"sourceType":"module"}