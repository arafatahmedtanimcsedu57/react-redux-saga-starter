{"ast":null,"code":"import axios from 'axios';\nimport { createActions } from 'redux-actions';\nimport { handleActions } from 'redux-actions';\nconst initState = {\n  authError: null,\n  authToken: null\n};\nconst types = {\n  LOGINFAILD: 'auth/LOGINFAILD',\n  LOGINSUCCESS: 'auth/LOGINSUCCESS'\n};\nconst creators = createActions({\n  [types.LOGINFAILD]: () => ({}),\n  [types.LOGINSUCCESS]: () => ({})\n});\nconst reducers = handleActions({\n  [types.LOGINFAILD]: (state, action) => ({ ...state,\n    authError: 'LOGIN FAILD'\n  }),\n  [types.LOGINSUCCESS]: (state, action) => ({ ...state,\n    authToken: action.auth,\n    authError: null\n  })\n}, initState);\nexport const signIn = credentials => {\n  console.log(credentials);\n  const user_token = axios.post(`https://dev-dexter.retaildata.xyz/api/auth/token`, {\n    username: credentials.username,\n    password: credentials.password\n  });\n  return axios.all([user_token]).then(axios.spread((...responses) => {\n    const token = responses[0].data.access;\n    localStorage.setItem('currUserToken', JSON.stringify(token));\n    axios.get(`https://dev-dexter.retaildata.xyz/api/users/api/v1/me`, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(res => localStorage.setItem('currUserType', JSON.stringify(res.data.user_type))).then(() => {\n      const type = JSON.parse(localStorage.getItem('currUserType'));\n      return creators.auth.login_success({\n        type: 'LOGINSUCCESS',\n        auth: {\n          token,\n          type\n        }\n      });\n    });\n  })).catch(err => {\n    return creators.auth.loginsuccess({\n      type: 'LOGINERROR',\n      err\n    });\n  });\n}; // export const signOut = () => {\n//     return (dispatch, getState) => {\n//         let promise = new Promise((resolve, reject) => resolve(localStorage.removeItem('currUserToken')))\n//         promise.then(() => window.location.reload())\n//         dispatch({ type: 'SIGNOUT_SUCCESS' })\n//     }\n// }\n\nexport default reducers;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/learning/starter/react-redux-saga-starter/src/Auth/ducks.js"],"names":["axios","createActions","handleActions","initState","authError","authToken","types","LOGINFAILD","LOGINSUCCESS","creators","reducers","state","action","auth","signIn","credentials","console","log","user_token","post","username","password","all","then","spread","responses","token","data","access","localStorage","setItem","JSON","stringify","get","headers","res","user_type","type","parse","getItem","login_success","catch","err","loginsuccess"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,aAAT,QAA8B,eAA9B;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,SAAS,EAAE;AAFG,CAAlB;AAKA,MAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,iBADF;AAEVC,EAAAA,YAAY,EAAE;AAFJ,CAAd;AAKA,MAAMC,QAAQ,GAAGR,aAAa,CAAC;AAC3B,GAACK,KAAK,CAACC,UAAP,GAAoB,OAAO,EAAP,CADO;AAE3B,GAACD,KAAK,CAACE,YAAP,GAAsB,OAAO,EAAP;AAFK,CAAD,CAA9B;AAKA,MAAME,QAAQ,GAAGR,aAAa,CAC1B;AACI,GAACI,KAAK,CAACC,UAAP,GAAoB,CAACI,KAAD,EAAQC,MAAR,MAAoB,EACpC,GAAGD,KADiC;AAEpCP,IAAAA,SAAS,EAAE;AAFyB,GAApB,CADxB;AAKI,GAACE,KAAK,CAACE,YAAP,GAAsB,CAACG,KAAD,EAAQC,MAAR,MAAoB,EACtC,GAAGD,KADmC;AAEtCN,IAAAA,SAAS,EAAEO,MAAM,CAACC,IAFoB;AAGtCT,IAAAA,SAAS,EAAE;AAH2B,GAApB;AAL1B,CAD0B,EAY1BD,SAZ0B,CAA9B;AAeA,OAAO,MAAMW,MAAM,GAAIC,WAAD,IAAiB;AAEnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAMG,UAAU,GAAGlB,KAAK,CAACmB,IAAN,CAAY,kDAAZ,EAA+D;AAC9EC,IAAAA,QAAQ,EAAEL,WAAW,CAACK,QADwD;AAE9EC,IAAAA,QAAQ,EAAEN,WAAW,CAACM;AAFwD,GAA/D,CAAnB;AAKA,SAAQrB,KAAK,CACRsB,GADG,CACC,CAACJ,UAAD,CADD,EAEHK,IAFG,CAEEvB,KAAK,CAACwB,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AACjC,UAAMC,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaE,IAAb,CAAkBC,MAAhC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAtC;AAEA1B,IAAAA,KAAK,CAACiC,GAAN,CAAW,uDAAX,EAAmE;AAC/DC,MAAAA,OAAO,EAAE;AAAE,yBAAiB,YAAYR;AAA/B;AADsD,KAAnE,EAGKH,IAHL,CAGUY,GAAG,IAAIN,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeG,GAAG,CAACR,IAAJ,CAASS,SAAxB,CAArC,CAHjB,EAIKb,IAJL,CAIU,MAAM;AACR,YAAMc,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,cAArB,CAAX,CAAb;AACA,aAAO9B,QAAQ,CAACI,IAAT,CAAc2B,aAAd,CAA4B;AAC/BH,QAAAA,IAAI,EAAE,cADyB;AAE/BxB,QAAAA,IAAI,EAAE;AACFa,UAAAA,KADE;AAEFW,UAAAA;AAFE;AAFyB,OAA5B,CAAP;AAOH,KAbL;AAeH,GAnBK,CAFF,EAqBAI,KArBA,CAqBMC,GAAG,IAAI;AACb,WAAOjC,QAAQ,CAACI,IAAT,CAAc8B,YAAd,CAA2B;AAC9BN,MAAAA,IAAI,EAAE,YADwB;AAE9BK,MAAAA;AAF8B,KAA3B,CAAP;AAIH,GA1BG,CAAR;AA2BH,CAnCM,C,CAsCP;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAehC,QAAf","sourcesContent":["import axios from 'axios'\nimport { createActions } from 'redux-actions'\nimport { handleActions } from 'redux-actions'\n\n\nconst initState = {\n    authError: null,\n    authToken: null\n}\n\nconst types = {\n    LOGINFAILD: 'auth/LOGINFAILD',\n    LOGINSUCCESS: 'auth/LOGINSUCCESS',\n}\n\nconst creators = createActions({\n    [types.LOGINFAILD]: () => ({}),\n    [types.LOGINSUCCESS]: () => ({})\n})\n\nconst reducers = handleActions(\n    {\n        [types.LOGINFAILD]: (state, action) => ({\n            ...state,\n            authError: 'LOGIN FAILD'\n        }),\n        [types.LOGINSUCCESS]: (state, action) => ({\n            ...state,\n            authToken: action.auth,\n            authError: null\n        })\n    },\n    initState\n);\n\nexport const signIn = (credentials) => {\n\n    console.log(credentials)\n    const user_token = axios.post(`https://dev-dexter.retaildata.xyz/api/auth/token`, {\n        username: credentials.username,\n        password: credentials.password\n    })\n\n    return (axios\n        .all([user_token])\n        .then(axios.spread((...responses) => {\n            const token = responses[0].data.access\n            localStorage.setItem('currUserToken', JSON.stringify(token))\n\n            axios.get(`https://dev-dexter.retaildata.xyz/api/users/api/v1/me`, {\n                headers: { \"Authorization\": \"Bearer \" + token }\n            })\n                .then(res => localStorage.setItem('currUserType', JSON.stringify(res.data.user_type)))\n                .then(() => {\n                    const type = JSON.parse(localStorage.getItem('currUserType'))\n                    return creators.auth.login_success({\n                        type: 'LOGINSUCCESS',\n                        auth: {\n                            token,\n                            type\n                        }\n                    })\n                })\n\n        })).catch(err => {\n            return creators.auth.loginsuccess({\n                type: 'LOGINERROR',\n                err\n            })\n        }))\n}\n\n\n// export const signOut = () => {\n//     return (dispatch, getState) => {\n//         let promise = new Promise((resolve, reject) => resolve(localStorage.removeItem('currUserToken')))\n//         promise.then(() => window.location.reload())\n\n//         dispatch({ type: 'SIGNOUT_SUCCESS' })\n//     }\n// }\n\nexport default reducers; "]},"metadata":{},"sourceType":"module"}