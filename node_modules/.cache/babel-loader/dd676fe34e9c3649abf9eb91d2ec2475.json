{"ast":null,"code":"import { call } from 'redux-saga/effects';\nimport actions from './actions';\n\nfunction* fetchRepos() {\n  const apiCall = () => {\n    return axios.post(`https://api.github.com/search/repositories?q=topic:react`, {\n      username: payload.username,\n      password: payload.password\n    }).then(res => res.data.access).catch(err => {\n      throw err;\n    });\n  };\n\n  try {\n    const repos = yield call(apiCall);\n    yield put(actions.receivedRepos(repos.items));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchRepos };","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/learning/starter/react-redux-saga-starter/src/Github/queries.js"],"names":["call","actions","fetchRepos","apiCall","axios","post","username","payload","password","then","res","data","access","catch","err","repos","put","receivedRepos","items","error","console","log"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,UAAUC,UAAV,GAAuB;AACnB,QAAMC,OAAO,GAAG,MAAM;AAClB,WAAOC,KAAK,CACPC,IADE,CACI,0DADJ,EAC+D;AAC9DC,MAAAA,QAAQ,EAAEC,OAAO,CAACD,QAD4C;AAE9DE,MAAAA,QAAQ,EAAED,OAAO,CAACC;AAF4C,KAD/D,EAIAC,IAJA,CAIKC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,MAJrB,EAKFC,KALE,CAKIC,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KAPE,CAAP;AAQH,GATD;;AAWA,MAAI;AACA,UAAMC,KAAK,GAAG,MAAMf,IAAI,CAACG,OAAD,CAAxB;AACA,UAAMa,GAAG,CAACf,OAAO,CAACgB,aAAR,CAAsBF,KAAK,CAACG,KAA5B,CAAD,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAED,SAASjB,UAAT","sourcesContent":["import { call } from 'redux-saga/effects';\n\nimport actions from './actions';\n\nfunction* fetchRepos() {\n    const apiCall = () => {\n        return axios\n            .post(`https://api.github.com/search/repositories?q=topic:react`, {\n                username: payload.username,\n                password: payload.password\n            }).then(res => res.data.access)\n            .catch(err => {\n                throw err;\n            });\n    }\n\n    try {\n        const repos = yield call(apiCall);\n        yield put(actions.receivedRepos(repos.items))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport { fetchRepos };"]},"metadata":{},"sourceType":"module"}